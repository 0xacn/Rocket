warning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes
 --> $DIR/lib.rs:1:12
  |
1 | #![feature(specialization)]
  |            ^^^^^^^^^^^^^^
  |
  = note: `#[warn(incomplete_features)]` on by default
  = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information

warning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes
 --> $DIR/lib.rs:1:12
  |
1 | #![feature(specialization)]
  |            ^^^^^^^^^^^^^^
  |
  = note: `#[warn(incomplete_features)]` on by default
  = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information

warning: trait objects without an explicit `dyn` are deprecated
   --> $DIR/uri_display.rs:299:43
    |
299 | impl<'a, P: UriPart> fmt::Display for &'a UriDisplay<P> {
    |                                           ^^^^^^^^^^^^^ help: use `dyn`: `dyn UriDisplay<P>`
    |
    = note: `#[warn(bare_trait_objects)]` on by default

warning: trait objects without an explicit `dyn` are deprecated
   --> $DIR/uri_display.rs:299:43
    |
299 | impl<'a, P: UriPart> fmt::Display for &'a UriDisplay<P> {
    |                                           ^^^^^^^^^^^^^ help: use `dyn`: `dyn UriDisplay<P>`
    |
    = note: `#[warn(bare_trait_objects)]` on by default

warning: `...` range patterns are deprecated
 --> $DIR/checkers.rs:9:12
  |
9 |         '0'...'9' | 'A'...'Z' | '^'...'~' | '#'...'\''
  |            ^^^ help: use `..=` for an inclusive range
  |
  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default

warning: `...` range patterns are deprecated
 --> $DIR/checkers.rs:9:12
  |
9 |         '0'...'9' | 'A'...'Z' | '^'...'~' | '#'...'\''
  |            ^^^ help: use `..=` for an inclusive range
  |
  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default

warning: `...` range patterns are deprecated
 --> $DIR/checkers.rs:9:24
  |
9 |         '0'...'9' | 'A'...'Z' | '^'...'~' | '#'...'\''
  |                        ^^^ help: use `..=` for an inclusive range

warning: `...` range patterns are deprecated
 --> $DIR/checkers.rs:9:24
  |
9 |         '0'...'9' | 'A'...'Z' | '^'...'~' | '#'...'\''
  |                        ^^^ help: use `..=` for an inclusive range

warning: `...` range patterns are deprecated
 --> $DIR/checkers.rs:9:36
  |
9 |         '0'...'9' | 'A'...'Z' | '^'...'~' | '#'...'\''
  |                                    ^^^ help: use `..=` for an inclusive range

warning: `...` range patterns are deprecated
 --> $DIR/checkers.rs:9:36
  |
9 |         '0'...'9' | 'A'...'Z' | '^'...'~' | '#'...'\''
  |                                    ^^^ help: use `..=` for an inclusive range

warning: `...` range patterns are deprecated
 --> $DIR/checkers.rs:9:48
  |
9 |         '0'...'9' | 'A'...'Z' | '^'...'~' | '#'...'\''
  |                                                ^^^ help: use `..=` for an inclusive range

warning: 6 warnings emitted

warning: `...` range patterns are deprecated
 --> $DIR/checkers.rs:9:48
  |
9 |         '0'...'9' | 'A'...'Z' | '^'...'~' | '#'...'\''
  |                                                ^^^ help: use `..=` for an inclusive range

warning: 6 warnings emitted

warning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes
 --> $DIR/lib.rs:1:12
  |
1 | #![feature(specialization)]
  |            ^^^^^^^^^^^^^^
  |
  = note: `#[warn(incomplete_features)]` on by default
  = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information

warning: trait objects without an explicit `dyn` are deprecated
   --> $DIR/response.rs:563:27
    |
563 |     body: Option<Body<Box<io::Read + 'r>>>,
    |                           ^^^^^^^^^^^^^ help: use `dyn`: `dyn io::Read + 'r`
    |
    = note: `#[warn(bare_trait_objects)]` on by default

warning: trait objects without an explicit `dyn` are deprecated
   --> $DIR/response.rs:892:48
    |
892 |     pub fn body(&mut self) -> Option<Body<&mut io::Read>> {
    |                                                ^^^^^^^^ help: use `dyn`: `dyn io::Read`

warning: trait objects without an explicit `dyn` are deprecated
   --> $DIR/response.rs:969:52
    |
969 |     pub fn take_body(&mut self) -> Option<Body<Box<io::Read + 'r>>> {
    |                                                    ^^^^^^^^^^^^^ help: use `dyn`: `dyn io::Read + 'r`

warning: `...` range patterns are deprecated
  --> $DIR/toml_ext.rs:27:12
   |
27 |         '0'...'9' | 'A'...'Z' | 'a'...'z' | '_' | '-' => true,
   |            ^^^ help: use `..=` for an inclusive range
   |
   = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default

warning: `...` range patterns are deprecated
  --> $DIR/toml_ext.rs:27:24
   |
27 |         '0'...'9' | 'A'...'Z' | 'a'...'z' | '_' | '-' => true,
   |                        ^^^ help: use `..=` for an inclusive range

warning: `...` range patterns are deprecated
  --> $DIR/toml_ext.rs:27:36
   |
27 |         '0'...'9' | 'A'...'Z' | 'a'...'z' | '_' | '-' => true,
   |                                    ^^^ help: use `..=` for an inclusive range

warning: trait objects without an explicit `dyn` are deprecated
  --> $DIR/data.rs:18:63
   |
18 |     self::HttpReader<&'a mut hyper::buffer::BufReader<&'b mut NetworkStream>>;
   |                                                               ^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream`

warning: trait objects without an explicit `dyn` are deprecated
   --> $DIR/data.rs:108:41
    |
108 |         fn concrete_stream(stream: &mut NetworkStream) -> Option<NetStream> {
    |                                         ^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream`

warning: trait objects without an explicit `dyn` are deprecated
   --> $DIR/handler.rs:155:36
    |
155 |     fn clone_handler(&self) -> Box<Handler>;
    |                                    ^^^^^^^ help: use `dyn`: `dyn Handler`

warning: trait objects without an explicit `dyn` are deprecated
   --> $DIR/handler.rs:160:36
    |
160 |     fn clone_handler(&self) -> Box<Handler> {
    |                                    ^^^^^^^ help: use `dyn`: `dyn Handler`

warning: trait objects without an explicit `dyn` are deprecated
   --> $DIR/handler.rs:165:20
    |
165 | impl Clone for Box<Handler> {
    |                    ^^^^^^^ help: use `dyn`: `dyn Handler`

warning: trait objects without an explicit `dyn` are deprecated
   --> $DIR/handler.rs:167:28
    |
167 |     fn clone(&self) -> Box<Handler> {
    |                            ^^^^^^^ help: use `dyn`: `dyn Handler`

warning: trait objects without an explicit `dyn` are deprecated
 --> $DIR/fairings.rs:8:27
  |
8 |     all_fairings: Vec<Box<Fairing>>,
  |                           ^^^^^^^ help: use `dyn`: `dyn Fairing`

warning: trait objects without an explicit `dyn` are deprecated
  --> $DIR/fairings.rs:22:43
   |
22 |     pub fn attach(&mut self, fairing: Box<Fairing>, mut rocket: Rocket) -> Rocket {
   |                                           ^^^^^^^ help: use `dyn`: `dyn Fairing`

warning: trait objects without an explicit `dyn` are deprecated
  --> $DIR/fairings.rs:35:36
   |
35 |     fn add(&mut self, fairing: Box<Fairing>) {
   |                                    ^^^^^^^ help: use `dyn`: `dyn Fairing`

warning: trait objects without an explicit `dyn` are deprecated
  --> $DIR/error.rs:30:17
   |
30 |     Unknown(Box<::std::error::Error + Send + Sync>)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ::std::error::Error + Send + Sync`

warning: trait objects without an explicit `dyn` are deprecated
  --> $DIR/route.rs:22:22
   |
22 |     pub handler: Box<Handler>,
   |                      ^^^^^^^ help: use `dyn`: `dyn Handler`

warning: 18 warnings emitted

error: enums are not supported
 --> $DIR/from_form.rs:6:1
  |
6 | enum Thing { }
  | ^^^^^^^^^^^^^^
  |
note: error occurred while deriving `FromForm`
 --> $DIR/from_form.rs:5:10
  |
5 | #[derive(FromForm)]
  |          ^^^^^^^^
  = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: tuple structs are not supported
  --> $DIR/from_form.rs:10:1
   |
10 | struct Foo1;
   | ^^^^^^^^^^^^
   |
note: error occurred while deriving `FromForm`
  --> $DIR/from_form.rs:9:10
   |
9  | #[derive(FromForm)]
   |          ^^^^^^^^
   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: at least one field is required
  --> $DIR/from_form.rs:14:1
   |
14 | struct Foo2 {  }
   | ^^^^^^^^^^^^^^^^
   |
note: error occurred while deriving `FromForm`
  --> $DIR/from_form.rs:13:10
   |
13 | #[derive(FromForm)]
   |          ^^^^^^^^
   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: tuple structs are not supported
  --> $DIR/from_form.rs:18:1
   |
18 | struct Foo3(usize);
   | ^^^^^^^^^^^^^^^^^^^
   |
note: error occurred while deriving `FromForm`
  --> $DIR/from_form.rs:17:10
   |
17 | #[derive(FromForm)]
   |          ^^^^^^^^
   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: only one lifetime is supported
  --> $DIR/from_form.rs:22:20
   |
22 | struct NextTodoTask<'f, 'a> {
   |                    ^^^^^^^^
   |
note: error occurred while deriving `FromForm`
  --> $DIR/from_form.rs:21:10
   |
21 | #[derive(FromForm)]
   |          ^^^^^^^^
   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid form field name
  --> $DIR/from_form.rs:32:20
   |
32 |     #[form(field = "isindex")]
   |                    ^^^^^^^^^
   |
note: error occurred while deriving `FromForm`
  --> $DIR/from_form.rs:30:10
   |
30 | #[derive(FromForm)]
   |          ^^^^^^^^
   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate field name
  --> $DIR/from_form.rs:41:5
   |
41 |     foo: usize,
   |     ^^^
   |
note: previous definition here
  --> $DIR/from_form.rs:39:20
   |
39 |     #[form(field = "foo")]
   |                    ^^^^^
note: error occurred while deriving `FromForm`
  --> $DIR/from_form.rs:37:10
   |
37 | #[derive(FromForm)]
   |          ^^^^^^^^
   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate field name
  --> $DIR/from_form.rs:49:20
   |
49 |     #[form(field = "hello")]
   |                    ^^^^^^^
   |
note: previous definition here
  --> $DIR/from_form.rs:47:20
   |
47 |     #[form(field = "hello")]
   |                    ^^^^^^^
note: error occurred while deriving `FromForm`
  --> $DIR/from_form.rs:45:10
   |
45 | #[derive(FromForm)]
   |          ^^^^^^^^
   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate field name
  --> $DIR/from_form.rs:57:20
   |
57 |     #[form(field = "first")]
   |                    ^^^^^^^
   |
note: previous definition here
  --> $DIR/from_form.rs:56:5
   |
56 |     first: String,
   |     ^^^^^
note: error occurred while deriving `FromForm`
  --> $DIR/from_form.rs:54:10
   |
54 | #[derive(FromForm)]
   |          ^^^^^^^^
   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate attribute parameter: field
  --> $DIR/from_form.rs:64:28
   |
64 |     #[form(field = "blah", field = "bloo")]
   |                            ^^^^^^^^^^^^^^
   |
note: error occurred while deriving `FromForm`
  --> $DIR/from_form.rs:62:10
   |
62 | #[derive(FromForm)]
   |          ^^^^^^^^
   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: malformed attribute: expected list
  --> $DIR/from_form.rs:71:7
   |
71 |     #[form]
   |       ^^^^
   |
   = help: expected syntax: #[form(key = value, ..)]
note: error occurred while deriving `FromForm`
  --> $DIR/from_form.rs:69:10
   |
69 | #[derive(FromForm)]
   |          ^^^^^^^^
   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: expected key/value pair
  --> $DIR/from_form.rs:78:12
   |
78 |     #[form("blah")]
   |            ^^^^^^
   |
note: error occurred while deriving `FromForm`
  --> $DIR/from_form.rs:76:10
   |
76 | #[derive(FromForm)]
   |          ^^^^^^^^
   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: expected key/value pair
  --> $DIR/from_form.rs:85:12
   |
85 |     #[form(123)]
   |            ^^^
   |
note: error occurred while deriving `FromForm`
  --> $DIR/from_form.rs:83:10
   |
83 | #[derive(FromForm)]
   |          ^^^^^^^^
   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: unexpected attribute parameter: `beep`
  --> $DIR/from_form.rs:92:12
   |
92 |     #[form(beep = "bop")]
   |            ^^^^^^^^^^^^
   |
note: error occurred while deriving `FromForm`
  --> $DIR/from_form.rs:90:10
   |
90 | #[derive(FromForm)]
   |          ^^^^^^^^
   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate invocation of `form` attribute
   --> $DIR/from_form.rs:100:5
    |
100 |     #[form(field = "bleh")]
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
note: error occurred while deriving `FromForm`
   --> $DIR/from_form.rs:97:10
    |
97  | #[derive(FromForm)]
    |          ^^^^^^^^
    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid value: expected string literal
   --> $DIR/from_form.rs:107:20
    |
107 |     #[form(field = true)]
    |                    ^^^^
    |
note: error occurred while deriving `FromForm`
   --> $DIR/from_form.rs:105:10
    |
105 | #[derive(FromForm)]
    |          ^^^^^^^^
    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: expected literal or key/value pair
   --> $DIR/from_form.rs:114:12
    |
114 |     #[form(field)]
    |            ^^^^^
    |
note: error occurred while deriving `FromForm`
   --> $DIR/from_form.rs:112:10
    |
112 | #[derive(FromForm)]
    |          ^^^^^^^^
    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid value: expected string literal
   --> $DIR/from_form.rs:121:20
    |
121 |     #[form(field = 123)]
    |                    ^^^
    |
note: error occurred while deriving `FromForm`
   --> $DIR/from_form.rs:119:10
    |
119 | #[derive(FromForm)]
    |          ^^^^^^^^
    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid form field name
   --> $DIR/from_form.rs:128:20
    |
128 |     #[form(field = "hello&world")]
    |                    ^^^^^^^^^^^^^
    |
note: error occurred while deriving `FromForm`
   --> $DIR/from_form.rs:126:10
    |
126 | #[derive(FromForm)]
    |          ^^^^^^^^
    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid form field name
   --> $DIR/from_form.rs:135:20
    |
135 |     #[form(field = "!@#$%^&*()_")]
    |                    ^^^^^^^^^^^^^
    |
note: error occurred while deriving `FromForm`
   --> $DIR/from_form.rs:133:10
    |
133 | #[derive(FromForm)]
    |          ^^^^^^^^
    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid form field name
   --> $DIR/from_form.rs:142:20
    |
142 |     #[form(field = "?")]
    |                    ^^^
    |
note: error occurred while deriving `FromForm`
   --> $DIR/from_form.rs:140:10
    |
140 | #[derive(FromForm)]
    |          ^^^^^^^^
    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid form field name
   --> $DIR/from_form.rs:149:20
    |
149 |     #[form(field = "")]
    |                    ^^
    |
note: error occurred while deriving `FromForm`
   --> $DIR/from_form.rs:147:10
    |
147 | #[derive(FromForm)]
    |          ^^^^^^^^
    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid form field name
   --> $DIR/from_form.rs:156:20
    |
156 |     #[form(field = "a&b")]
    |                    ^^^^^
    |
note: error occurred while deriving `FromForm`
   --> $DIR/from_form.rs:154:10
    |
154 | #[derive(FromForm)]
    |          ^^^^^^^^
    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid form field name
   --> $DIR/from_form.rs:163:20
    |
163 |     #[form(field = "a=")]
    |                    ^^^^
    |
note: error occurred while deriving `FromForm`
   --> $DIR/from_form.rs:161:10
    |
161 | #[derive(FromForm)]
    |          ^^^^^^^^
    = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)
